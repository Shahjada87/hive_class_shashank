
# Copying the sales_order_data file from local to the hdfs location

hadoop fs -put /tmp/student_hive_tmp/sales_order_data.csv /tmp/hive_data_class2/


# Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table


create table sales_order_data_csv_assignment
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > row format delimited
    > fields terminated by ','
    > tblproperties ("skip.header.line.count"="1")
    > ;
    
    
    
# Load data from hdfs path into "sales_order_data_csv_assignment" 

load data inpath '/tmp/hive_data_class2/sales_order_data.csv' into table sales_order_data_csv_assignment;


# Create an internal hive table which will store data in ORC format "sales_order_orc"

create table sales_order_data_assignment_orc
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > stored as orc;
    
    
# Load data from "sales_order_csv" into "sales_order_orc"

from sales_order_data_csv_assignment insert overwrite table sales_order_data_assignment_orc select *;


# Perform below menioned queries on "sales_order_orc" table :

    a. Calculate total sales per year

          select Sum(sales) as TotalSales from sales_order_data_assignment_orc group by year_id;
          
          OK
          3516979.547241211
          4724162.593383789
          1791486.7086791992
          Time taken: 37.56 seconds, Fetched: 3 row(s)

    b.  Calculate the total sales for each quarter

          select Sum(sales) as TotalSales,qtr_id as quarters from sales_order_data_assignment_orc group by qtr_id;
          
          OK
          2350817.726501465	    1
          2048120.3029174805    2
          1758910.808959961	    3
          3874780.010925293	    4
          Time taken: 31.356 seconds, Fetched: 4 row(s)
          
          
          
          
